<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="JUnit Vintage" tests="264" skipped="0" failures="0" errors="0" time="0.048" hostname="csimage-VirtualBox" timestamp="2022-03-09T21:53:38">
<properties>
<property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
<property name="file.encoding" value="UTF-8"/>
<property name="file.separator" value="/"/>
<property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
<property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
<property name="java.class.path" value="junit-platform-console-standalone.jar"/>
<property name="java.class.version" value="55.0"/>
<property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/>
<property name="java.io.tmpdir" value="/tmp"/>
<property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
<property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
<property name="java.runtime.version" value="11.0.13+8-Ubuntu-0ubuntu1.20.04"/>
<property name="java.specification.name" value="Java Platform API Specification"/>
<property name="java.specification.vendor" value="Oracle Corporation"/>
<property name="java.specification.version" value="11"/>
<property name="java.vendor" value="Ubuntu"/>
<property name="java.vendor.url" value="https://ubuntu.com/"/>
<property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-lts"/>
<property name="java.version" value="11.0.13"/>
<property name="java.version.date" value="2021-10-19"/>
<property name="java.vm.compressedOopsMode" value="32-bit"/>
<property name="java.vm.info" value="mixed mode, sharing"/>
<property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
<property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
<property name="java.vm.specification.vendor" value="Oracle Corporation"/>
<property name="java.vm.specification.version" value="11"/>
<property name="java.vm.vendor" value="Ubuntu"/>
<property name="java.vm.version" value="11.0.13+8-Ubuntu-0ubuntu1.20.04"/>
<property name="jdk.debug" value="release"/>
<property name="line.separator" value="
"/>
<property name="os.arch" value="amd64"/>
<property name="os.name" value="Linux"/>
<property name="os.version" value="5.4.0-97-generic"/>
<property name="path.separator" value=":"/>
<property name="sun.arch.data.model" value="64"/>
<property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/>
<property name="sun.cpu.endian" value="little"/>
<property name="sun.cpu.isalist" value=""/>
<property name="sun.desktop" value="gnome"/>
<property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
<property name="sun.java.command" value="junit-platform-console-standalone.jar --class-path ./chess-project/bin/main/:./chess-project/bin/test/ --scan-class-path --fail-if-no-tests --reports-dir=./chess-project/report"/>
<property name="sun.java.launcher" value="SUN_STANDARD"/>
<property name="sun.jnu.encoding" value="UTF-8"/>
<property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
<property name="sun.os.patch.level" value="unknown"/>
<property name="user.country" value="GB"/>
<property name="user.dir" value="/home/csimage/Desktop/test/chess-coursework_j36001zl"/>
<property name="user.home" value="/home/csimage"/>
<property name="user.language" value="en"/>
<property name="user.name" value="csimage"/>
<property name="user.timezone" value="Europe/London"/>
</properties>
<testcase name="badMoveWhite1" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveWhite1(chess.QueenMovesTest)]
display-name: badMoveWhite1
]]></system-out>
</testcase>
<testcase name="badMoveWhite2" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveWhite2(chess.QueenMovesTest)]
display-name: badMoveWhite2
]]></system-out>
</testcase>
<testcase name="badMoveWhite3" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveWhite3(chess.QueenMovesTest)]
display-name: badMoveWhite3
]]></system-out>
</testcase>
<testcase name="badMoveWhite4" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveWhite4(chess.QueenMovesTest)]
display-name: badMoveWhite4
]]></system-out>
</testcase>
<testcase name="badMoveWhite5" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveWhite5(chess.QueenMovesTest)]
display-name: badMoveWhite5
]]></system-out>
</testcase>
<testcase name="goodMoveBlack1" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveBlack1(chess.QueenMovesTest)]
display-name: goodMoveBlack1
]]></system-out>
</testcase>
<testcase name="goodMoveBlack2" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveBlack2(chess.QueenMovesTest)]
display-name: goodMoveBlack2
]]></system-out>
</testcase>
<testcase name="goodMoveBlack3" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveBlack3(chess.QueenMovesTest)]
display-name: goodMoveBlack3
]]></system-out>
</testcase>
<testcase name="goodMoveBlack4" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveBlack4(chess.QueenMovesTest)]
display-name: goodMoveBlack4
]]></system-out>
</testcase>
<testcase name="goodMoveBlack5" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveBlack5(chess.QueenMovesTest)]
display-name: goodMoveBlack5
]]></system-out>
</testcase>
<testcase name="goodMoveBlack6" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveBlack6(chess.QueenMovesTest)]
display-name: goodMoveBlack6
]]></system-out>
</testcase>
<testcase name="goodMoveBlack7" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveBlack7(chess.QueenMovesTest)]
display-name: goodMoveBlack7
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite10" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite10(chess.QueenMovesTest)]
display-name: badMoveInitialWhite10
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite11" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite11(chess.QueenMovesTest)]
display-name: badMoveInitialWhite11
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite12" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite12(chess.QueenMovesTest)]
display-name: badMoveInitialWhite12
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite13" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite13(chess.QueenMovesTest)]
display-name: badMoveInitialWhite13
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite14" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite14(chess.QueenMovesTest)]
display-name: badMoveInitialWhite14
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite15" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite15(chess.QueenMovesTest)]
display-name: badMoveInitialWhite15
]]></system-out>
</testcase>
<testcase name="goodMoveWhite1" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveWhite1(chess.QueenMovesTest)]
display-name: goodMoveWhite1
]]></system-out>
</testcase>
<testcase name="goodMoveWhite2" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveWhite2(chess.QueenMovesTest)]
display-name: goodMoveWhite2
]]></system-out>
</testcase>
<testcase name="goodMoveWhite3" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveWhite3(chess.QueenMovesTest)]
display-name: goodMoveWhite3
]]></system-out>
</testcase>
<testcase name="goodMoveWhite4" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveWhite4(chess.QueenMovesTest)]
display-name: goodMoveWhite4
]]></system-out>
</testcase>
<testcase name="goodMoveWhite5" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveWhite5(chess.QueenMovesTest)]
display-name: goodMoveWhite5
]]></system-out>
</testcase>
<testcase name="goodMoveWhite6" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveWhite6(chess.QueenMovesTest)]
display-name: goodMoveWhite6
]]></system-out>
</testcase>
<testcase name="goodMoveWhite7" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:goodMoveWhite7(chess.QueenMovesTest)]
display-name: goodMoveWhite7
]]></system-out>
</testcase>
<testcase name="badMoveInitialBlack0" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialBlack0(chess.QueenMovesTest)]
display-name: badMoveInitialBlack0
]]></system-out>
</testcase>
<testcase name="badMoveInitialBlack1" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialBlack1(chess.QueenMovesTest)]
display-name: badMoveInitialBlack1
]]></system-out>
</testcase>
<testcase name="badMoveInitialBlack2" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialBlack2(chess.QueenMovesTest)]
display-name: badMoveInitialBlack2
]]></system-out>
</testcase>
<testcase name="badMoveInitialBlack3" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialBlack3(chess.QueenMovesTest)]
display-name: badMoveInitialBlack3
]]></system-out>
</testcase>
<testcase name="badMoveInitialBlack4" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialBlack4(chess.QueenMovesTest)]
display-name: badMoveInitialBlack4
]]></system-out>
</testcase>
<testcase name="badMoveInitialBlack5" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialBlack5(chess.QueenMovesTest)]
display-name: badMoveInitialBlack5
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite1" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite1(chess.QueenMovesTest)]
display-name: badMoveInitialWhite1
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite2" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite2(chess.QueenMovesTest)]
display-name: badMoveInitialWhite2
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite3" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite3(chess.QueenMovesTest)]
display-name: badMoveInitialWhite3
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite4" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite4(chess.QueenMovesTest)]
display-name: badMoveInitialWhite4
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite5" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite5(chess.QueenMovesTest)]
display-name: badMoveInitialWhite5
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite6" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite6(chess.QueenMovesTest)]
display-name: badMoveInitialWhite6
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite7" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite7(chess.QueenMovesTest)]
display-name: badMoveInitialWhite7
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite8" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite8(chess.QueenMovesTest)]
display-name: badMoveInitialWhite8
]]></system-out>
</testcase>
<testcase name="badMoveInitialWhite9" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveInitialWhite9(chess.QueenMovesTest)]
display-name: badMoveInitialWhite9
]]></system-out>
</testcase>
<testcase name="badMoveBlack0" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveBlack0(chess.QueenMovesTest)]
display-name: badMoveBlack0
]]></system-out>
</testcase>
<testcase name="badMoveBlack1" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveBlack1(chess.QueenMovesTest)]
display-name: badMoveBlack1
]]></system-out>
</testcase>
<testcase name="badMoveBlack2" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveBlack2(chess.QueenMovesTest)]
display-name: badMoveBlack2
]]></system-out>
</testcase>
<testcase name="badMoveBlack3" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveBlack3(chess.QueenMovesTest)]
display-name: badMoveBlack3
]]></system-out>
</testcase>
<testcase name="badMoveBlack4" classname="chess.QueenMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenMovesTest]/[test:badMoveBlack4(chess.QueenMovesTest)]
display-name: badMoveBlack4
]]></system-out>
</testcase>
<testcase name="bishopSubclassofPieceTest" classname="chess.BishopSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopSpecsTest]/[test:bishopSubclassofPieceTest(chess.BishopSpecsTest)]
display-name: bishopSubclassofPieceTest
]]></system-out>
</testcase>
<testcase name="bishopPublicTest" classname="chess.BishopSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopSpecsTest]/[test:bishopPublicTest(chess.BishopSpecsTest)]
display-name: bishopPublicTest
]]></system-out>
</testcase>
<testcase name="isLegitDefinition" classname="chess.BishopSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopSpecsTest]/[test:isLegitDefinition(chess.BishopSpecsTest)]
display-name: isLegitDefinition
]]></system-out>
</testcase>
<testcase name="bishopConstructorDefinitionTest" classname="chess.BishopSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopSpecsTest]/[test:bishopConstructorDefinitionTest(chess.BishopSpecsTest)]
display-name: bishopConstructorDefinitionTest
]]></system-out>
</testcase>
<testcase name="pawnPublicTest" classname="chess.PawnSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnSpecsTest]/[test:pawnPublicTest(chess.PawnSpecsTest)]
display-name: pawnPublicTest
]]></system-out>
</testcase>
<testcase name="pawnConstructorDefinitionTest" classname="chess.PawnSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnSpecsTest]/[test:pawnConstructorDefinitionTest(chess.PawnSpecsTest)]
display-name: pawnConstructorDefinitionTest
]]></system-out>
</testcase>
<testcase name="pawnSubclassofPieceTest" classname="chess.PawnSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnSpecsTest]/[test:pawnSubclassofPieceTest(chess.PawnSpecsTest)]
display-name: pawnSubclassofPieceTest
]]></system-out>
</testcase>
<testcase name="isLegitDefinition" classname="chess.PawnSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnSpecsTest]/[test:isLegitDefinition(chess.PawnSpecsTest)]
display-name: isLegitDefinition
]]></system-out>
</testcase>
<testcase name="kingSubclassofPieceTest" classname="chess.KingSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingSpecsTest]/[test:kingSubclassofPieceTest(chess.KingSpecsTest)]
display-name: kingSubclassofPieceTest
]]></system-out>
</testcase>
<testcase name="isLegitDefinition" classname="chess.KingSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingSpecsTest]/[test:isLegitDefinition(chess.KingSpecsTest)]
display-name: isLegitDefinition
]]></system-out>
</testcase>
<testcase name="kingPublicTest" classname="chess.KingSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingSpecsTest]/[test:kingPublicTest(chess.KingSpecsTest)]
display-name: kingPublicTest
]]></system-out>
</testcase>
<testcase name="kingConstructorDefinitionTest" classname="chess.KingSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingSpecsTest]/[test:kingConstructorDefinitionTest(chess.KingSpecsTest)]
display-name: kingConstructorDefinitionTest
]]></system-out>
</testcase>
<testcase name="verticalUpWhiteGood1" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:verticalUpWhiteGood1(chess.RookMovesTest)]
display-name: verticalUpWhiteGood1
]]></system-out>
</testcase>
<testcase name="verticalUpWhiteGood2" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:verticalUpWhiteGood2(chess.RookMovesTest)]
display-name: verticalUpWhiteGood2
]]></system-out>
</testcase>
<testcase name="verticalUpWhiteBad1" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:verticalUpWhiteBad1(chess.RookMovesTest)]
display-name: verticalUpWhiteBad1
]]></system-out>
</testcase>
<testcase name="verticalUpWhiteBad2" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:verticalUpWhiteBad2(chess.RookMovesTest)]
display-name: verticalUpWhiteBad2
]]></system-out>
</testcase>
<testcase name="horizontalRightBlackGood" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:horizontalRightBlackGood(chess.RookMovesTest)]
display-name: horizontalRightBlackGood
]]></system-out>
</testcase>
<testcase name="verticalDownWhiteBad" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:verticalDownWhiteBad(chess.RookMovesTest)]
display-name: verticalDownWhiteBad
]]></system-out>
</testcase>
<testcase name="horizontalRightWhiteBad" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:horizontalRightWhiteBad(chess.RookMovesTest)]
display-name: horizontalRightWhiteBad
]]></system-out>
</testcase>
<testcase name="verticalUpBlackBad" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:verticalUpBlackBad(chess.RookMovesTest)]
display-name: verticalUpBlackBad
]]></system-out>
</testcase>
<testcase name="horizontalRightWhiteGood" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:horizontalRightWhiteGood(chess.RookMovesTest)]
display-name: horizontalRightWhiteGood
]]></system-out>
</testcase>
<testcase name="verticalDownBlackBad1" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:verticalDownBlackBad1(chess.RookMovesTest)]
display-name: verticalDownBlackBad1
]]></system-out>
</testcase>
<testcase name="verticalDownBlackBad2" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:verticalDownBlackBad2(chess.RookMovesTest)]
display-name: verticalDownBlackBad2
]]></system-out>
</testcase>
<testcase name="verticalDownBlackGood" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:verticalDownBlackGood(chess.RookMovesTest)]
display-name: verticalDownBlackGood
]]></system-out>
</testcase>
<testcase name="horizontalLeftBlackGood" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:horizontalLeftBlackGood(chess.RookMovesTest)]
display-name: horizontalLeftBlackGood
]]></system-out>
</testcase>
<testcase name="horizontalLeftWhiteBad" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:horizontalLeftWhiteBad(chess.RookMovesTest)]
display-name: horizontalLeftWhiteBad
]]></system-out>
</testcase>
<testcase name="horizontalRightBlackBad" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:horizontalRightBlackBad(chess.RookMovesTest)]
display-name: horizontalRightBlackBad
]]></system-out>
</testcase>
<testcase name="badMove10" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:badMove10(chess.RookMovesTest)]
display-name: badMove10
]]></system-out>
</testcase>
<testcase name="verticalUpBlackGood" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:verticalUpBlackGood(chess.RookMovesTest)]
display-name: verticalUpBlackGood
]]></system-out>
</testcase>
<testcase name="horizontalLeftBlackBad" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:horizontalLeftBlackBad(chess.RookMovesTest)]
display-name: horizontalLeftBlackBad
]]></system-out>
</testcase>
<testcase name="verticalDownWhiteGood" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:verticalDownWhiteGood(chess.RookMovesTest)]
display-name: verticalDownWhiteGood
]]></system-out>
</testcase>
<testcase name="horizontalLeftWhiteGood" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:horizontalLeftWhiteGood(chess.RookMovesTest)]
display-name: horizontalLeftWhiteGood
]]></system-out>
</testcase>
<testcase name="badMove0" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:badMove0(chess.RookMovesTest)]
display-name: badMove0
]]></system-out>
</testcase>
<testcase name="badMove1" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:badMove1(chess.RookMovesTest)]
display-name: badMove1
]]></system-out>
</testcase>
<testcase name="badMove2" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:badMove2(chess.RookMovesTest)]
display-name: badMove2
]]></system-out>
</testcase>
<testcase name="badMove3" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:badMove3(chess.RookMovesTest)]
display-name: badMove3
]]></system-out>
</testcase>
<testcase name="badMove4" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:badMove4(chess.RookMovesTest)]
display-name: badMove4
]]></system-out>
</testcase>
<testcase name="badMove5" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:badMove5(chess.RookMovesTest)]
display-name: badMove5
]]></system-out>
</testcase>
<testcase name="badMove6" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:badMove6(chess.RookMovesTest)]
display-name: badMove6
]]></system-out>
</testcase>
<testcase name="badMove7" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:badMove7(chess.RookMovesTest)]
display-name: badMove7
]]></system-out>
</testcase>
<testcase name="badMove8" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:badMove8(chess.RookMovesTest)]
display-name: badMove8
]]></system-out>
</testcase>
<testcase name="badMove9" classname="chess.RookMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookMovesTest]/[test:badMove9(chess.RookMovesTest)]
display-name: badMove9
]]></system-out>
</testcase>
<testcase name="symbolIsPrivateTest" classname="chess.PieceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PieceTest]/[test:symbolIsPrivateTest(chess.PieceTest)]
display-name: symbolIsPrivateTest
]]></system-out>
</testcase>
<testcase name="pieceAbstractTest" classname="chess.PieceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PieceTest]/[test:pieceAbstractTest(chess.PieceTest)]
display-name: pieceAbstractTest
]]></system-out>
</testcase>
<testcase name="piecePublicTest" classname="chess.PieceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PieceTest]/[test:piecePublicTest(chess.PieceTest)]
display-name: piecePublicTest
]]></system-out>
</testcase>
<testcase name="colourProtectedTest" classname="chess.PieceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PieceTest]/[test:colourProtectedTest(chess.PieceTest)]
display-name: colourProtectedTest
]]></system-out>
</testcase>
<testcase name="isLegitTest" classname="chess.PieceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PieceTest]/[test:isLegitTest(chess.PieceTest)]
display-name: isLegitTest
]]></system-out>
</testcase>
<testcase name="getSymbolTest" classname="chess.PieceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PieceTest]/[test:getSymbolTest(chess.PieceTest)]
display-name: getSymbolTest
]]></system-out>
</testcase>
<testcase name="symbolTest" classname="chess.PieceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PieceTest]/[test:symbolTest(chess.PieceTest)]
display-name: symbolTest
]]></system-out>
</testcase>
<testcase name="setSymbolTest" classname="chess.PieceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PieceTest]/[test:setSymbolTest(chess.PieceTest)]
display-name: setSymbolTest
]]></system-out>
</testcase>
<testcase name="getColourTest" classname="chess.PieceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PieceTest]/[test:getColourTest(chess.PieceTest)]
display-name: getColourTest
]]></system-out>
</testcase>
<testcase name="isLegitAbstractTest" classname="chess.PieceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PieceTest]/[test:isLegitAbstractTest(chess.PieceTest)]
display-name: isLegitAbstractTest
]]></system-out>
</testcase>
<testcase name="removePieceTest" classname="chess.SquareTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.SquareTest]/[test:removePieceTest(chess.SquareTest)]
display-name: removePieceTest
]]></system-out>
</testcase>
<testcase name="squarePublicTest" classname="chess.SquareTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.SquareTest]/[test:squarePublicTest(chess.SquareTest)]
display-name: squarePublicTest
]]></system-out>
</testcase>
<testcase name="hasPieceTest" classname="chess.SquareTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.SquareTest]/[test:hasPieceTest(chess.SquareTest)]
display-name: hasPieceTest
]]></system-out>
</testcase>
<testcase name="hasPieceIsPrivateTest" classname="chess.SquareTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.SquareTest]/[test:hasPieceIsPrivateTest(chess.SquareTest)]
display-name: hasPieceIsPrivateTest
]]></system-out>
</testcase>
<testcase name="getPieceTest" classname="chess.SquareTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.SquareTest]/[test:getPieceTest(chess.SquareTest)]
display-name: getPieceTest
]]></system-out>
</testcase>
<testcase name="pieceIsPrivateTest" classname="chess.SquareTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.SquareTest]/[test:pieceIsPrivateTest(chess.SquareTest)]
display-name: pieceIsPrivateTest
]]></system-out>
</testcase>
<testcase name="setPieceTest" classname="chess.SquareTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.SquareTest]/[test:setPieceTest(chess.SquareTest)]
display-name: setPieceTest
]]></system-out>
</testcase>
<testcase name="rightInputFormatBeyondBoundaries1" classname="chess.CheckInputTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.CheckInputTest]/[test:rightInputFormatBeyondBoundaries1(chess.CheckInputTest)]
display-name: rightInputFormatBeyondBoundaries1
]]></system-out>
</testcase>
<testcase name="rightInputFormatBeyondBoundaries2" classname="chess.CheckInputTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.CheckInputTest]/[test:rightInputFormatBeyondBoundaries2(chess.CheckInputTest)]
display-name: rightInputFormatBeyondBoundaries2
]]></system-out>
</testcase>
<testcase name="rightInputFormatBeyondBoundaries3" classname="chess.CheckInputTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.CheckInputTest]/[test:rightInputFormatBeyondBoundaries3(chess.CheckInputTest)]
display-name: rightInputFormatBeyondBoundaries3
]]></system-out>
</testcase>
<testcase name="wrongInputFormat" classname="chess.CheckInputTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.CheckInputTest]/[test:wrongInputFormat(chess.CheckInputTest)]
display-name: wrongInputFormat
]]></system-out>
</testcase>
<testcase name="goodInputFormat" classname="chess.CheckInputTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.CheckInputTest]/[test:goodInputFormat(chess.CheckInputTest)]
display-name: goodInputFormat
]]></system-out>
</testcase>
<testcase name="wrongInputSize1" classname="chess.CheckInputTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.CheckInputTest]/[test:wrongInputSize1(chess.CheckInputTest)]
display-name: wrongInputSize1
]]></system-out>
</testcase>
<testcase name="wrongInputSize2" classname="chess.CheckInputTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.CheckInputTest]/[test:wrongInputSize2(chess.CheckInputTest)]
display-name: wrongInputSize2
]]></system-out>
</testcase>
<testcase name="wrongInputSize3" classname="chess.CheckInputTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.CheckInputTest]/[test:wrongInputSize3(chess.CheckInputTest)]
display-name: wrongInputSize3
]]></system-out>
</testcase>
<testcase name="wrongInputSize4" classname="chess.CheckInputTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.CheckInputTest]/[test:wrongInputSize4(chess.CheckInputTest)]
display-name: wrongInputSize4
]]></system-out>
</testcase>
<testcase name="wrongInputSize5" classname="chess.CheckInputTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.CheckInputTest]/[test:wrongInputSize5(chess.CheckInputTest)]
display-name: wrongInputSize5
]]></system-out>
</testcase>
<testcase name="emptyInputSize" classname="chess.CheckInputTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.CheckInputTest]/[test:emptyInputSize(chess.CheckInputTest)]
display-name: emptyInputSize
]]></system-out>
</testcase>
<testcase name="wrongInputFormat2" classname="chess.CheckInputTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.CheckInputTest]/[test:wrongInputFormat2(chess.CheckInputTest)]
display-name: wrongInputFormat2
]]></system-out>
</testcase>
<testcase name="wrongInputFormat3" classname="chess.CheckInputTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.CheckInputTest]/[test:wrongInputFormat3(chess.CheckInputTest)]
display-name: wrongInputFormat3
]]></system-out>
</testcase>
<testcase name="elevenF" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:elevenF(chess.KnightMovesTest)]
display-name: elevenF
]]></system-out>
</testcase>
<testcase name="elevenT" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:elevenT(chess.KnightMovesTest)]
display-name: elevenT
]]></system-out>
</testcase>
<testcase name="eightF" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:eightF(chess.KnightMovesTest)]
display-name: eightF
]]></system-out>
</testcase>
<testcase name="eightT" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:eightT(chess.KnightMovesTest)]
display-name: eightT
]]></system-out>
</testcase>
<testcase name="sevenF" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:sevenF(chess.KnightMovesTest)]
display-name: sevenF
]]></system-out>
</testcase>
<testcase name="sevenT" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:sevenT(chess.KnightMovesTest)]
display-name: sevenT
]]></system-out>
</testcase>
<testcase name="twelve" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:twelve(chess.KnightMovesTest)]
display-name: twelve
]]></system-out>
</testcase>
<testcase name="six" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:six(chess.KnightMovesTest)]
display-name: six
]]></system-out>
</testcase>
<testcase name="nine" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:nine(chess.KnightMovesTest)]
display-name: nine
]]></system-out>
</testcase>
<testcase name="oneF" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:oneF(chess.KnightMovesTest)]
display-name: oneF
]]></system-out>
</testcase>
<testcase name="oneT" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:oneT(chess.KnightMovesTest)]
display-name: oneT
]]></system-out>
</testcase>
<testcase name="tenF" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:tenF(chess.KnightMovesTest)]
display-name: tenF
]]></system-out>
</testcase>
<testcase name="tenT" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:tenT(chess.KnightMovesTest)]
display-name: tenT
]]></system-out>
</testcase>
<testcase name="twoF" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:twoF(chess.KnightMovesTest)]
display-name: twoF
]]></system-out>
</testcase>
<testcase name="twoT" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:twoT(chess.KnightMovesTest)]
display-name: twoT
]]></system-out>
</testcase>
<testcase name="fiveF" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:fiveF(chess.KnightMovesTest)]
display-name: fiveF
]]></system-out>
</testcase>
<testcase name="fiveT" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:fiveT(chess.KnightMovesTest)]
display-name: fiveT
]]></system-out>
</testcase>
<testcase name="fourF" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:fourF(chess.KnightMovesTest)]
display-name: fourF
]]></system-out>
</testcase>
<testcase name="fourT" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:fourT(chess.KnightMovesTest)]
display-name: fourT
]]></system-out>
</testcase>
<testcase name="three" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:three(chess.KnightMovesTest)]
display-name: three
]]></system-out>
</testcase>
<testcase name="badMove01" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:badMove01(chess.KnightMovesTest)]
display-name: badMove01
]]></system-out>
</testcase>
<testcase name="badMove02" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:badMove02(chess.KnightMovesTest)]
display-name: badMove02
]]></system-out>
</testcase>
<testcase name="badMove1" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:badMove1(chess.KnightMovesTest)]
display-name: badMove1
]]></system-out>
</testcase>
<testcase name="badMove2" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:badMove2(chess.KnightMovesTest)]
display-name: badMove2
]]></system-out>
</testcase>
<testcase name="badMove3" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:badMove3(chess.KnightMovesTest)]
display-name: badMove3
]]></system-out>
</testcase>
<testcase name="badMove4" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:badMove4(chess.KnightMovesTest)]
display-name: badMove4
]]></system-out>
</testcase>
<testcase name="badMove5" classname="chess.KnightMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightMovesTest]/[test:badMove5(chess.KnightMovesTest)]
display-name: badMove5
]]></system-out>
</testcase>
<testcase name="rookSubclassofPieceTest" classname="chess.RookSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookSpecsTest]/[test:rookSubclassofPieceTest(chess.RookSpecsTest)]
display-name: rookSubclassofPieceTest
]]></system-out>
</testcase>
<testcase name="rookConsTest" classname="chess.RookSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookSpecsTest]/[test:rookConsTest(chess.RookSpecsTest)]
display-name: rookConsTest
]]></system-out>
</testcase>
<testcase name="isLegitDefinition" classname="chess.RookSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookSpecsTest]/[test:isLegitDefinition(chess.RookSpecsTest)]
display-name: isLegitDefinition
]]></system-out>
</testcase>
<testcase name="rookPublicTest" classname="chess.RookSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.RookSpecsTest]/[test:rookPublicTest(chess.RookSpecsTest)]
display-name: rookPublicTest
]]></system-out>
</testcase>
<testcase name="queenConstructorDefinitionTest" classname="chess.QueenSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenSpecsTest]/[test:queenConstructorDefinitionTest(chess.QueenSpecsTest)]
display-name: queenConstructorDefinitionTest
]]></system-out>
</testcase>
<testcase name="queenSubclassofPieceTest" classname="chess.QueenSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenSpecsTest]/[test:queenSubclassofPieceTest(chess.QueenSpecsTest)]
display-name: queenSubclassofPieceTest
]]></system-out>
</testcase>
<testcase name="queenPublicTest" classname="chess.QueenSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenSpecsTest]/[test:queenPublicTest(chess.QueenSpecsTest)]
display-name: queenPublicTest
]]></system-out>
</testcase>
<testcase name="isLegitDefinition" classname="chess.QueenSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.QueenSpecsTest]/[test:isLegitDefinition(chess.QueenSpecsTest)]
display-name: isLegitDefinition
]]></system-out>
</testcase>
<testcase name="knightConstructorDefinitionTest" classname="chess.KnightSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightSpecsTest]/[test:knightConstructorDefinitionTest(chess.KnightSpecsTest)]
display-name: knightConstructorDefinitionTest
]]></system-out>
</testcase>
<testcase name="knightPublicTest" classname="chess.KnightSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightSpecsTest]/[test:knightPublicTest(chess.KnightSpecsTest)]
display-name: knightPublicTest
]]></system-out>
</testcase>
<testcase name="isLegitDefinition" classname="chess.KnightSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightSpecsTest]/[test:isLegitDefinition(chess.KnightSpecsTest)]
display-name: isLegitDefinition
]]></system-out>
</testcase>
<testcase name="knightSubclassofPieceTest" classname="chess.KnightSpecsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KnightSpecsTest]/[test:knightSubclassofPieceTest(chess.KnightSpecsTest)]
display-name: knightSubclassofPieceTest
]]></system-out>
</testcase>
<testcase name="badfirstMoveB1" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveB1(chess.PawnMovesTest)]
display-name: badfirstMoveB1
]]></system-out>
</testcase>
<testcase name="badfirstMoveB2" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveB2(chess.PawnMovesTest)]
display-name: badfirstMoveB2
]]></system-out>
</testcase>
<testcase name="badfirstMoveB3" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveB3(chess.PawnMovesTest)]
display-name: badfirstMoveB3
]]></system-out>
</testcase>
<testcase name="badfirstMoveB4" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveB4(chess.PawnMovesTest)]
display-name: badfirstMoveB4
]]></system-out>
</testcase>
<testcase name="badfirstMoveB5" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveB5(chess.PawnMovesTest)]
display-name: badfirstMoveB5
]]></system-out>
</testcase>
<testcase name="badfirstMoveB6" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveB6(chess.PawnMovesTest)]
display-name: badfirstMoveB6
]]></system-out>
</testcase>
<testcase name="badfirstMoveB7" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveB7(chess.PawnMovesTest)]
display-name: badfirstMoveB7
]]></system-out>
</testcase>
<testcase name="badfirstMoveB8" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveB8(chess.PawnMovesTest)]
display-name: badfirstMoveB8
]]></system-out>
</testcase>
<testcase name="badfirstMoveB9" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveB9(chess.PawnMovesTest)]
display-name: badfirstMoveB9
]]></system-out>
</testcase>
<testcase name="badfirstMoveW1" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveW1(chess.PawnMovesTest)]
display-name: badfirstMoveW1
]]></system-out>
</testcase>
<testcase name="badfirstMoveW2" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveW2(chess.PawnMovesTest)]
display-name: badfirstMoveW2
]]></system-out>
</testcase>
<testcase name="badfirstMoveW3" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveW3(chess.PawnMovesTest)]
display-name: badfirstMoveW3
]]></system-out>
</testcase>
<testcase name="badfirstMoveW4" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveW4(chess.PawnMovesTest)]
display-name: badfirstMoveW4
]]></system-out>
</testcase>
<testcase name="badfirstMoveW5" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveW5(chess.PawnMovesTest)]
display-name: badfirstMoveW5
]]></system-out>
</testcase>
<testcase name="badfirstMoveW6" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveW6(chess.PawnMovesTest)]
display-name: badfirstMoveW6
]]></system-out>
</testcase>
<testcase name="badfirstMoveW7" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badfirstMoveW7(chess.PawnMovesTest)]
display-name: badfirstMoveW7
]]></system-out>
</testcase>
<testcase name="goodMoveB1" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodMoveB1(chess.PawnMovesTest)]
display-name: goodMoveB1
]]></system-out>
</testcase>
<testcase name="goodMoveB2" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodMoveB2(chess.PawnMovesTest)]
display-name: goodMoveB2
]]></system-out>
</testcase>
<testcase name="goodMoveB3" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodMoveB3(chess.PawnMovesTest)]
display-name: goodMoveB3
]]></system-out>
</testcase>
<testcase name="goodMoveW1" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodMoveW1(chess.PawnMovesTest)]
display-name: goodMoveW1
]]></system-out>
</testcase>
<testcase name="goodMoveW2" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodMoveW2(chess.PawnMovesTest)]
display-name: goodMoveW2
]]></system-out>
</testcase>
<testcase name="goodMoveW3" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodMoveW3(chess.PawnMovesTest)]
display-name: goodMoveW3
]]></system-out>
</testcase>
<testcase name="goodfirstMoveB2" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodfirstMoveB2(chess.PawnMovesTest)]
display-name: goodfirstMoveB2
]]></system-out>
</testcase>
<testcase name="goodfirstMoveB3" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodfirstMoveB3(chess.PawnMovesTest)]
display-name: goodfirstMoveB3
]]></system-out>
</testcase>
<testcase name="goodfirstMoveB4" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodfirstMoveB4(chess.PawnMovesTest)]
display-name: goodfirstMoveB4
]]></system-out>
</testcase>
<testcase name="goodfirstMoveB5" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodfirstMoveB5(chess.PawnMovesTest)]
display-name: goodfirstMoveB5
]]></system-out>
</testcase>
<testcase name="goodfirstMoveB6" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodfirstMoveB6(chess.PawnMovesTest)]
display-name: goodfirstMoveB6
]]></system-out>
</testcase>
<testcase name="goodfirstMoveW1" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodfirstMoveW1(chess.PawnMovesTest)]
display-name: goodfirstMoveW1
]]></system-out>
</testcase>
<testcase name="goodfirstMoveW2" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodfirstMoveW2(chess.PawnMovesTest)]
display-name: goodfirstMoveW2
]]></system-out>
</testcase>
<testcase name="goodfirstMoveW3" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodfirstMoveW3(chess.PawnMovesTest)]
display-name: goodfirstMoveW3
]]></system-out>
</testcase>
<testcase name="goodfirstMoveW4" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:goodfirstMoveW4(chess.PawnMovesTest)]
display-name: goodfirstMoveW4
]]></system-out>
</testcase>
<testcase name="badMoveB1" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveB1(chess.PawnMovesTest)]
display-name: badMoveB1
]]></system-out>
</testcase>
<testcase name="badMoveB2" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveB2(chess.PawnMovesTest)]
display-name: badMoveB2
]]></system-out>
</testcase>
<testcase name="badMoveB3" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveB3(chess.PawnMovesTest)]
display-name: badMoveB3
]]></system-out>
</testcase>
<testcase name="badMoveB4" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveB4(chess.PawnMovesTest)]
display-name: badMoveB4
]]></system-out>
</testcase>
<testcase name="badMoveB5" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveB5(chess.PawnMovesTest)]
display-name: badMoveB5
]]></system-out>
</testcase>
<testcase name="badMoveB6" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveB6(chess.PawnMovesTest)]
display-name: badMoveB6
]]></system-out>
</testcase>
<testcase name="badMoveB7" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveB7(chess.PawnMovesTest)]
display-name: badMoveB7
]]></system-out>
</testcase>
<testcase name="badMoveB8" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveB8(chess.PawnMovesTest)]
display-name: badMoveB8
]]></system-out>
</testcase>
<testcase name="badMoveW1" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveW1(chess.PawnMovesTest)]
display-name: badMoveW1
]]></system-out>
</testcase>
<testcase name="badMoveW2" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveW2(chess.PawnMovesTest)]
display-name: badMoveW2
]]></system-out>
</testcase>
<testcase name="badMoveW3" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveW3(chess.PawnMovesTest)]
display-name: badMoveW3
]]></system-out>
</testcase>
<testcase name="badMoveW4" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveW4(chess.PawnMovesTest)]
display-name: badMoveW4
]]></system-out>
</testcase>
<testcase name="badMoveW5" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveW5(chess.PawnMovesTest)]
display-name: badMoveW5
]]></system-out>
</testcase>
<testcase name="badMoveW6" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveW6(chess.PawnMovesTest)]
display-name: badMoveW6
]]></system-out>
</testcase>
<testcase name="badMoveW7" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveW7(chess.PawnMovesTest)]
display-name: badMoveW7
]]></system-out>
</testcase>
<testcase name="badMoveW8" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveW8(chess.PawnMovesTest)]
display-name: badMoveW8
]]></system-out>
</testcase>
<testcase name="badMoveW9" classname="chess.PawnMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.PawnMovesTest]/[test:badMoveW9(chess.PawnMovesTest)]
display-name: badMoveW9
]]></system-out>
</testcase>
<testcase name="goodMoveB1" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:goodMoveB1(chess.KingMovesTest)]
display-name: goodMoveB1
]]></system-out>
</testcase>
<testcase name="goodMoveB2" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:goodMoveB2(chess.KingMovesTest)]
display-name: goodMoveB2
]]></system-out>
</testcase>
<testcase name="goodMoveB3" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:goodMoveB3(chess.KingMovesTest)]
display-name: goodMoveB3
]]></system-out>
</testcase>
<testcase name="goodMoveB4" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:goodMoveB4(chess.KingMovesTest)]
display-name: goodMoveB4
]]></system-out>
</testcase>
<testcase name="goodMoveB5" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:goodMoveB5(chess.KingMovesTest)]
display-name: goodMoveB5
]]></system-out>
</testcase>
<testcase name="goodMoveB6" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:goodMoveB6(chess.KingMovesTest)]
display-name: goodMoveB6
]]></system-out>
</testcase>
<testcase name="goodMoveB7" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:goodMoveB7(chess.KingMovesTest)]
display-name: goodMoveB7
]]></system-out>
</testcase>
<testcase name="goodMoveW1" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:goodMoveW1(chess.KingMovesTest)]
display-name: goodMoveW1
]]></system-out>
</testcase>
<testcase name="goodMoveW2" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:goodMoveW2(chess.KingMovesTest)]
display-name: goodMoveW2
]]></system-out>
</testcase>
<testcase name="goodMoveW3" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:goodMoveW3(chess.KingMovesTest)]
display-name: goodMoveW3
]]></system-out>
</testcase>
<testcase name="goodMoveW4" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:goodMoveW4(chess.KingMovesTest)]
display-name: goodMoveW4
]]></system-out>
</testcase>
<testcase name="goodMoveW5" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:goodMoveW5(chess.KingMovesTest)]
display-name: goodMoveW5
]]></system-out>
</testcase>
<testcase name="badMoveB1" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:badMoveB1(chess.KingMovesTest)]
display-name: badMoveB1
]]></system-out>
</testcase>
<testcase name="badMoveB2" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:badMoveB2(chess.KingMovesTest)]
display-name: badMoveB2
]]></system-out>
</testcase>
<testcase name="badMoveB3" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:badMoveB3(chess.KingMovesTest)]
display-name: badMoveB3
]]></system-out>
</testcase>
<testcase name="badMoveB4" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:badMoveB4(chess.KingMovesTest)]
display-name: badMoveB4
]]></system-out>
</testcase>
<testcase name="badMoveB5" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:badMoveB5(chess.KingMovesTest)]
display-name: badMoveB5
]]></system-out>
</testcase>
<testcase name="badMoveB6" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:badMoveB6(chess.KingMovesTest)]
display-name: badMoveB6
]]></system-out>
</testcase>
<testcase name="badMoveW1" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:badMoveW1(chess.KingMovesTest)]
display-name: badMoveW1
]]></system-out>
</testcase>
<testcase name="badMoveW2" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:badMoveW2(chess.KingMovesTest)]
display-name: badMoveW2
]]></system-out>
</testcase>
<testcase name="badMoveW3" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:badMoveW3(chess.KingMovesTest)]
display-name: badMoveW3
]]></system-out>
</testcase>
<testcase name="badMoveW4" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:badMoveW4(chess.KingMovesTest)]
display-name: badMoveW4
]]></system-out>
</testcase>
<testcase name="badMoveW5" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:badMoveW5(chess.KingMovesTest)]
display-name: badMoveW5
]]></system-out>
</testcase>
<testcase name="badMoveW6" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:badMoveW6(chess.KingMovesTest)]
display-name: badMoveW6
]]></system-out>
</testcase>
<testcase name="badMoveW7" classname="chess.KingMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.KingMovesTest]/[test:badMoveW7(chess.KingMovesTest)]
display-name: badMoveW7
]]></system-out>
</testcase>
<testcase name="goodMoveNE" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:goodMoveNE(chess.BishopMovesTest)]
display-name: goodMoveNE
]]></system-out>
</testcase>
<testcase name="goodMoveNW" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:goodMoveNW(chess.BishopMovesTest)]
display-name: goodMoveNW
]]></system-out>
</testcase>
<testcase name="goodMoveSE" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:goodMoveSE(chess.BishopMovesTest)]
display-name: goodMoveSE
]]></system-out>
</testcase>
<testcase name="goodMoveSW" classname="chess.BishopMovesTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:goodMoveSW(chess.BishopMovesTest)]
display-name: goodMoveSW
]]></system-out>
</testcase>
<testcase name="goodMove1" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:goodMove1(chess.BishopMovesTest)]
display-name: goodMove1
]]></system-out>
</testcase>
<testcase name="goodMove2" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:goodMove2(chess.BishopMovesTest)]
display-name: goodMove2
]]></system-out>
</testcase>
<testcase name="goodMove3" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:goodMove3(chess.BishopMovesTest)]
display-name: goodMove3
]]></system-out>
</testcase>
<testcase name="goodMove4" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:goodMove4(chess.BishopMovesTest)]
display-name: goodMove4
]]></system-out>
</testcase>
<testcase name="badMove10" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMove10(chess.BishopMovesTest)]
display-name: badMove10
]]></system-out>
</testcase>
<testcase name="badMove11" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMove11(chess.BishopMovesTest)]
display-name: badMove11
]]></system-out>
</testcase>
<testcase name="badMove12" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMove12(chess.BishopMovesTest)]
display-name: badMove12
]]></system-out>
</testcase>
<testcase name="badMove13" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMove13(chess.BishopMovesTest)]
display-name: badMove13
]]></system-out>
</testcase>
<testcase name="badMove14" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMove14(chess.BishopMovesTest)]
display-name: badMove14
]]></system-out>
</testcase>
<testcase name="badMoveNE" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMoveNE(chess.BishopMovesTest)]
display-name: badMoveNE
]]></system-out>
</testcase>
<testcase name="badMoveSE" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMoveSE(chess.BishopMovesTest)]
display-name: badMoveSE
]]></system-out>
</testcase>
<testcase name="badMoveSW" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMoveSW(chess.BishopMovesTest)]
display-name: badMoveSW
]]></system-out>
</testcase>
<testcase name="badMoveW0" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMoveW0(chess.BishopMovesTest)]
display-name: badMoveW0
]]></system-out>
</testcase>
<testcase name="badMoveW1" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMoveW1(chess.BishopMovesTest)]
display-name: badMoveW1
]]></system-out>
</testcase>
<testcase name="badMove2" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMove2(chess.BishopMovesTest)]
display-name: badMove2
]]></system-out>
</testcase>
<testcase name="badMove3" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMove3(chess.BishopMovesTest)]
display-name: badMove3
]]></system-out>
</testcase>
<testcase name="badMove4" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMove4(chess.BishopMovesTest)]
display-name: badMove4
]]></system-out>
</testcase>
<testcase name="badMove5" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMove5(chess.BishopMovesTest)]
display-name: badMove5
]]></system-out>
</testcase>
<testcase name="badMove6" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMove6(chess.BishopMovesTest)]
display-name: badMove6
]]></system-out>
</testcase>
<testcase name="badMove7" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMove7(chess.BishopMovesTest)]
display-name: badMove7
]]></system-out>
</testcase>
<testcase name="badMove8" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMove8(chess.BishopMovesTest)]
display-name: badMove8
]]></system-out>
</testcase>
<testcase name="badMove9" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMove9(chess.BishopMovesTest)]
display-name: badMove9
]]></system-out>
</testcase>
<testcase name="badMoveB" classname="chess.BishopMovesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BishopMovesTest]/[test:badMoveB(chess.BishopMovesTest)]
display-name: badMoveB
]]></system-out>
</testcase>
<testcase name="boardStaticMethod_1Test" classname="chess.BoardTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BoardTest]/[test:boardStaticMethod_1Test(chess.BoardTest)]
display-name: boardStaticMethod_1Test
]]></system-out>
</testcase>
<testcase name="boardStaticMethod_2Test" classname="chess.BoardTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BoardTest]/[test:boardStaticMethod_2Test(chess.BoardTest)]
display-name: boardStaticMethod_2Test
]]></system-out>
</testcase>
<testcase name="boardStaticMethod_3Test" classname="chess.BoardTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BoardTest]/[test:boardStaticMethod_3Test(chess.BoardTest)]
display-name: boardStaticMethod_3Test
]]></system-out>
</testcase>
<testcase name="boardStaticMethod_4Test" classname="chess.BoardTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BoardTest]/[test:boardStaticMethod_4Test(chess.BoardTest)]
display-name: boardStaticMethod_4Test
]]></system-out>
</testcase>
<testcase name="boardStaticMethod_5Test" classname="chess.BoardTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BoardTest]/[test:boardStaticMethod_5Test(chess.BoardTest)]
display-name: boardStaticMethod_5Test
]]></system-out>
</testcase>
<testcase name="boardStaticMethod_6Test" classname="chess.BoardTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BoardTest]/[test:boardStaticMethod_6Test(chess.BoardTest)]
display-name: boardStaticMethod_6Test
]]></system-out>
</testcase>
<testcase name="boardStaticMethod_7Test" classname="chess.BoardTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BoardTest]/[test:boardStaticMethod_7Test(chess.BoardTest)]
display-name: boardStaticMethod_7Test
]]></system-out>
</testcase>
<testcase name="boardIsStatic" classname="chess.BoardTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-vintage]/[runner:chess.BoardTest]/[test:boardIsStatic(chess.BoardTest)]
display-name: boardIsStatic
]]></system-out>
</testcase>
<system-out><![CDATA[
unique-id: [engine:junit-vintage]
display-name: JUnit Vintage
]]></system-out>
</testsuite>
